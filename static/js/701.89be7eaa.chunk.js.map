{"version":3,"file":"static/js/701.89be7eaa.chunk.js","mappings":"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","sources":["components/sharedStyles.styles.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const StyledRegister = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  margin-top: 70px;\n  `;\n\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 20px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrorMessageContainer = styled(ErrorMessage)`\n  color: red;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    if (!Array.isArray(contacts)) {\n      return [];\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonWithMargin\":\"ContactListItem_buttonWithMargin__wJ7wH\",\"item\":\"ContactListItem_item__UAAix\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handelDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <li key={contact.id} className={css.item}>\n      {contact.name}\n      <button\n        onClick={handelDelete}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  return (\n    <>\n      <ul className={css.list}>\n        {filteredContacts.map(contact => (\n          <ContactListItem key={contact.id} contact={contact}></ContactListItem>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n  name: yup.string().required('Required'),\n  number: yup.number().required('Required'),\n});\n\nconst ContactForm = ({ handleCloseModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    const { name, number } = values;\n    const newContact = { name, number };\n\n    if (contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\n      Notiflix.Notify.failure(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(newContact));\n      resetForm();\n      handleCloseModal();\n    }\n\n    setSubmitting(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <label>\n            Name\n            <Field type=\"text\" name=\"name\"  />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </label>\n\n          <label>\n            Number\n            <Field type=\"tel\" name=\"number\"  />\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </label>\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Add contact\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filtersSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handelInputChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label >\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handelInputChange}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"overlay\":\"ContactForm_overlay__7064Q\",\"form-container\":\"ContactForm_form-container__f0Wf3\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport css from '../components/ContactForm/ContactForm.module.css';\nimport { StyledRegister } from 'components/sharedStyles.styles';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <StyledRegister>\n      <button type=\"button\" onClick={handleOpenModal}>\n        Add Contact\n      </button>\n      {isModalOpen && (\n        <div className={css.overlay}>\n          <div className={css['form-container']}>\n            <ContactForm handleCloseModal={handleCloseModal} />\n          </div>\n        </div>\n      )}\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n      </StyledRegister>\n    </>\n  );\n}\n"],"names":["StyledRegister","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","_templateObject3","ErrorMessage","_templateObject4","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","items","getIsLoading","isLoading","getFilteredContacts","filter","contact","toLowerCase","includes","_ref","dispatch","useDispatch","_jsxs","className","css","children","_jsx","onClick","deleteContact","id","filteredContacts","useSelector","_Fragment","ContactListItem","validationSchema","yup","required","number","handleCloseModal","Formik","initialValues","onSubmit","values","_ref2","setSubmitting","resetForm","newContact","item","Notiflix","addContact","_ref3","isSubmitting","Field","type","component","disabled","onChange","e","setFilter","target","Contacts","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","useEffect","fetchContacts","Helmet","ContactForm","Filter","ContactList"],"sourceRoot":""}